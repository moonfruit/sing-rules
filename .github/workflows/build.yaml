name: Build sing-box rule-sets
on:
  schedule:
    - cron: "0 0,12 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - ".github/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set Variables
        run: |
          echo "TAG=$(env TZ=Asia/Shanghai date +%Y%m%d%H%M)" | tee -a $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v5

      - name: Checkout Rules
        uses: actions/checkout@v5
        with:
          repository: Loyalsoldier/v2ray-rules-dat
          path: dat
          ref: release

      - name: Download clash config
        env:
          XIPCLOUD_URL: ${{ secrets.XIPCLOUD_URL }}
          NANOCLOUD_URL: ${{ secrets.NANOCLOUD_URL }}
        run: |
          curl -fsSL "$XIPCLOUD_URL" >dat/xipcloud.yaml
          curl -fsSL -H "User-Agent: sing-box/*" "$NANOCLOUD_URL" >dat/nanocloud.json

      - name: Preflight
        run: |
          set -o pipefail
          ./preflight.sh xipcloud.yaml nanocloud.json | tee -a $GITHUB_ENV

      - name: Checkout geo
        if: env.BUILD_RULES == 1
        uses: actions/checkout@v5
        with:
          repository: MetaCubeX/geo
          path: geo

      - name: Setup Go
        if: env.BUILD_RULES == 1
        uses: actions/setup-go@v5
        with:
          go-version-file: geo/go.mod
          cache-dependency-path: geo/go.sum

      - name: Install geo
        if: env.BUILD_RULES == 1
        run: |
          cd geo && go install -v ./cmd/geo
          geo | head -1

      - name: Install sing-box
        run: |
          bash <(curl -fsSL https://sing-box.app/deb-install.sh)
          sing-box version

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip

      - name: Install python requirements
        run: pip install -r requirements.txt

      - name: Checkout private
        env:
          GITEE_USER: ${{ secrets.GITEE_USER }}
          GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        run: ./checkout-gitee.sh "$GITEE_USER" "$GITEE_TOKEN"

      - name: Build config
        if: env.BUILD_CONFIG == 1
        env:
          GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        run: ./build-sing-config.sh "$GITEE_TOKEN"

      - name: Build rule sets
        if: env.BUILD_RULES == 1
        run: ./build-sing-rules.sh

      - name: Commit and Push (private)
        run: ../commit-and-push.sh "Update config" || true
        working-directory: private

      - name: Commit and Push
        run: ./commit-and-push.sh "Update rules" "${{ env.TAG }}"

      - name: Release
        if: env.BUILD_RULES == 1
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          files: rules/*

      - name: Setup Node
        if: env.BUILD_RULES == 1
        uses: actions/setup-node@v4
        with:
          registry-url: "https://registry.npmjs.org"

      - name: Publish to npmjs
        if: env.BUILD_RULES == 1
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: ./npm-publish.sh  "${{ env.TAG }}"
